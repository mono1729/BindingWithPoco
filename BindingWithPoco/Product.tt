<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel;

namespace BindingWithPoco
{
	public class Product : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		private void OnPropertyChanged(string propertyName)
		{
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}

<# foreach(var f in _fields) #>
<# { #>
		private <#= f.Type #> _<#= f.Name #>;
		public <#= f.Type #> <#= f.Name #>
		{
			get { return _<#= f.Name #>; }
			set
			{
				_<#= f.Name #> = value;
				OnPropertyChanged("<#= f.Name #>");
			}
		}
<# } #>
     

	}
}


<#+
	class Field
	{
		public string Name { get; set; }
		public string Type { get; set; }
	}

	private static List<Field> _fields = new List<Field>
    {
		new Field { Name = "ProductID", Type = "int" },
		new Field { Name = "ProductName", Type = "string" },
		new Field { Name = "SupplierID", Type = "int" },
		new Field { Name = "CategoryID", Type = "int" },
		new Field { Name = "QuantityPerUnit", Type = "string" },
		new Field { Name = "UnitPrice", Type = "decimal" },
		new Field { Name = "UnitsInStock", Type = "short" },
		new Field { Name = "UnitsOnOrder", Type = "short" },
		new Field { Name = "ReorderLevel", Type = "short" },
		new Field { Name = "Discontinued", Type = "bool" }
    };
#>
